name: "Pick Reviewer"

on:
  pull_request:
    types: opened

jobs:
  pick-random-reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Pick random reviewer
        id: pick_random_reviewer
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            const developers = JSON.parse(fs.readFileSync(`${{ github.workspace }}/.github/workflows/reviewer.json`));
            const prCreator = context.payload.pull_request.user.login;
            const prUrl = context.payload.pull_request.html_url;
            const prCreatorJson = developers.reviewers.find(person => person.githubName === prCreator);

            if (developers.length <= 1) {
              core.setOutput('reviewers', [prCreatorJson.name]);
              core.setOutput('writer', prCreatorJson.name);
              core.setOutput('pullRequestLink', prUrl);
            } else {
              const candidateInternalReviewers = developers.reviewers.filter(person => person.team === prCreatorJson.team);
              const candidateExternalReviewers = developers.reviewers.filter(person => person.team !== prCreatorJson.team);

              const randomReviewer = candidateInternalReviewers[Math.floor(Math.random() * candidateInternalReviewers.length)].name;
              const randomReviewer2 = candidateExternalReviewers[Math.floor(Math.random() * candidateExternalReviewers.length)].name;

              core.setOutput('reviewer1', randomReviewer);
              core.setOutput('reviewer2', randomReviewer2);
              core.setOutput('writer', prCreatorJson.name);
              core.setOutput('pullRequestLink', prUrl);
            }

      - name: Add Reviewers
        uses: madrapps/add-reviewers@v1
        with:
          reviewers: ${{ steps.pick_random_reviwer.outputs.reviewer }}, ${{ steps.pick_random_reviwer.outputs.reviewer2 }}
          token: ${{ secrets.GITHUB_TOKEN }}
      

      - name: Send Slack Trigger
        run: |
          curl -X POST https://api-slack.internal.bcsdlab.com/api/review-request/frontend \
          -H 'Content-Type: application/json' \
          -d '{
                "pullRequestLink": "https://github.com/BCSDLab/KOIN_OWNER_WEB/pull/180",
                "writer": "김하나",
                "reviewers": ["채승윤", "최정훈"]
              }'
